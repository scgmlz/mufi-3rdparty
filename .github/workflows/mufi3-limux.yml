## ************************************************************************** ##
##
##  Multifit:  wrapper for various fit libraries
##
##! @file      .github/workflows/mufi3-linux.yml
##! @brief     GitHub runner configuration for building 3rdparty dependences under Linux
##!
##! @license   GNU General Public License v3 or higher (see COPYING)
##! @copyright Forschungszentrum JÃ¼lich GmbH 2020
##! @authors   Scientific Computing Group at MLZ (see AUTHORS)
##
## ************************************************************************** ##

name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: setup apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential\
          g++ cmake libgsl-dev ccache

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files for Multifit
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: mufi3-linux-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          mufi3-linux-ccache-

    - name: Build Multifit
      env:
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
        CCACHE_COMPRESS: "true"
        CCACHE_COMPRESSLEVEL: "6"
        CCACHE_MAXSIZE: "400M"
      run: |
        cd $GITHUB_WORKSPACE && pwd && ls
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ../
        # make package_source
        make -j4

    - name: Upload tarball
      uses: actions/upload-artifact@v2
      if: success()
      with:
         name: MultifitTar
         path: ./build/Multifit-*.tar.gz

    - name: Testing
      run: |
        cd $GITHUB_WORKSPACE/build
        ccache -s
        ctest -LE Fullcheck --output-on-failure

    - name: Upload test logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
         name: LastTest.log
         path: ./build/Testing/Temporary/LastTest.log
