## ************************************************************************** ##
##
##  Multifit:  wrapper for various fit libraries
##
##! @file      .github/workflows/mufi3-macos.yml
##! @brief     GitHub runner configuration for building 3rdparty dependences under Linux
##!
##! @license   GNU General Public License v3 or higher (see COPYING)
##! @copyright Forschungszentrum JÃ¼lich GmbH 2020
##! @authors   Scientific Computing Group at MLZ (see AUTHORS)
##
## ************************************************************************** ##

name: MacOS

on:
  push:
    branches: [ master, develop]
    paths-ignore:
      - 'Doc/**'
  pull_request:
    branches: [ master, develop ]
    paths-ignore:
      - 'Doc/**'

jobs:
  build:
    runs-on: macos-latest
    strategy:
      max-parallel: 3

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: setup dependencies
      run: |
        brew install cmake gsl boost ccache

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files for BornAgain
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: mufi3-macos-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          mufi3-macos-ccache-

    - name: Build BornAgain
      env:
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
        CCACHE_COMPRESS: "true"
        CCACHE_COMPRESSLEVEL: "6"
        CCACHE_MAXSIZE: "400M"
        CXX: clang++
        USE_CPP: 14
        CMAKE_CXX_STANDARD: 14
        PYTHON_VERSION: 3.8
        LLVM_BC_GENERATOR: /usr/bin/clang++
      run: |
        cd $GITHUB_WORKSPACE
        mkdir build && cd build
        cmake -DBORNAGAIN_APPLE_BUNDLE=ON \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ../
        make -j4

    - name: Testing
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/build
        ccache -s
        ctest -LE Fullcheck --output-on-failure

    - name: Upload test logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
         name: LastTest.log
         path: ./build/Testing/Temporary/LastTest.log

    - name: Build package
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/build
        cpack -V

    - name: Upload package
      uses: actions/upload-artifact@v2
      if: success()
      with:
         name: BornAgainMacInstaller
         path: ./build/*.dmg
